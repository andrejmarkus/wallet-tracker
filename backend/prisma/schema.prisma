// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String              @id @default(cuid())
  email              String              @unique
  username           String              @unique
  password           String
  telegramChatId     String?             @unique
  telegramLinkTokens TelegramLinkToken[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  wallets UserWallet[]
}

model TelegramLinkToken {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Wallet {
  address String @id

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users UserWallet[]
}

model UserWallet {
  userId   String
  walletId String
  name     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  wallet Wallet @relation(fields: [walletId], references: [address], onDelete: Cascade)

  @@id([userId, walletId])
  @@index([walletId])
}
